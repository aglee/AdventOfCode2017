import Foundation

// Example input.
let testInputLines: [String] = """
../.# => ##./#../...
.#./..#/### => #..#/..../..../#..#
""".components(separatedBy: .newlines)

// Real input.
let inputLines: [String] = """
../.. => ##./##./.##
#./.. => .../.#./##.
##/.. => .../.##/#.#
.#/#. => ##./#../#..
##/#. => .##/#.#/#..
##/## => ..#/.#./.##
.../.../... => #.../.##./...#/#...
#../.../... => ...#/..../..#./..##
.#./.../... => ..../.##./###./....
##./.../... => ###./#.##/..#./..#.
#.#/.../... => #.../.#../#..#/..#.
###/.../... => ..##/.##./#.../....
.#./#../... => #.##/..../..../#.##
##./#../... => .#.#/.#.#/##../.#..
..#/#../... => .###/####/.###/##..
#.#/#../... => ..../.#.#/..../####
.##/#../... => .##./##.#/.###/#..#
###/#../... => ####/...#/###./.###
.../.#./... => ..##/#..#/###./###.
#../.#./... => ###./..##/.#.#/.#.#
.#./.#./... => ..#./..#./##.#/##..
##./.#./... => #..#/###./..#./#.#.
#.#/.#./... => .###/#.../.#.#/.##.
###/.#./... => #.##/##../#.#./...#
.#./##./... => #.##/#.##/#.##/.###
##./##./... => ..##/#..#/.###/....
..#/##./... => #..#/.##./##../####
#.#/##./... => ###./###./..##/..##
.##/##./... => ###./##.#/.##./###.
###/##./... => ##../#..#/##../....
.../#.#/... => ##.#/..#./..##/##..
#../#.#/... => #..#/.###/.#../#.#.
.#./#.#/... => ####/#.##/.###/###.
##./#.#/... => #.../####/...#/.#.#
#.#/#.#/... => ...#/.#.#/#..#/#.##
###/#.#/... => ###./#.##/##.#/..##
.../###/... => ..../##.#/.#../..##
#../###/... => ####/..##/.##./.###
.#./###/... => #.#./#.#./#.../#..#
##./###/... => #..#/..##/#.##/#.#.
#.#/###/... => .##./##.#/.#../####
###/###/... => ####/##.#/.#../#.#.
..#/.../#.. => #..#/#.##/.###/.###
#.#/.../#.. => .##./#.../.#.#/....
.##/.../#.. => .#.#/.#.#/##../####
###/.../#.. => .#.#/.##./####/##.#
.##/#../#.. => .###/.###/.###/#...
###/#../#.. => ..##/#.../#.#./..#.
..#/.#./#.. => #.#./##../##../####
#.#/.#./#.. => ..../..##/#..#/..#.
.##/.#./#.. => #.##/#..#/##.#/.##.
###/.#./#.. => ...#/#.../#.#./.#..
.##/##./#.. => .##./#..#/.##./...#
###/##./#.. => ##.#/##.#/.##./...#
#../..#/#.. => ##../..#./..#./#.#.
.#./..#/#.. => #.#./##../#..#/#.##
##./..#/#.. => #.##/###./###./.#.#
#.#/..#/#.. => ..../...#/...#/#..#
.##/..#/#.. => #..#/#.#./..##/.##.
###/..#/#.. => ##../.#.#/.#../#.#.
#../#.#/#.. => ####/.##./.##./.##.
.#./#.#/#.. => ...#/.##./..#./.##.
##./#.#/#.. => .#.#/.##./..#./.#.#
..#/#.#/#.. => .#../##.#/##../#...
#.#/#.#/#.. => .#.#/..#./#.../##..
.##/#.#/#.. => ..#./#.#./###./#...
###/#.#/#.. => ..../#.#./..##/##.#
#../.##/#.. => .##./##../.#../..##
.#./.##/#.. => ##../#.#./#.../####
##./.##/#.. => ###./###./#.#./..##
#.#/.##/#.. => ...#/#..#/..#./###.
.##/.##/#.. => ..##/####/..../#.##
###/.##/#.. => .#.#/#.../.##./#...
#../###/#.. => ..#./.#.#/#..#/.##.
.#./###/#.. => ####/..../####/#.##
##./###/#.. => .###/..../#.#./####
..#/###/#.. => ###./#.#./.#.#/#...
#.#/###/#.. => #.#./#.#./..##/.##.
.##/###/#.. => #.##/.###/.##./#.##
###/###/#.. => #..#/.#../.#../.##.
.#./#.#/.#. => .#../.##./##../..##
##./#.#/.#. => .##./#.##/...#/#.#.
#.#/#.#/.#. => ##.#/###./#.#./..#.
###/#.#/.#. => ..../##../.###/###.
.#./###/.#. => .#.#/.###/..../#..#
##./###/.#. => #.../..#./#..#/.#..
#.#/###/.#. => .#../##.#/##.#/.###
###/###/.#. => #..#/.#.#/#.#./..#.
#.#/..#/##. => .#../.###/...#/#.##
###/..#/##. => ...#/...#/..##/...#
.##/#.#/##. => #.#./###./.##./####
###/#.#/##. => #.#./...#/...#/....
#.#/.##/##. => ###./#.../##.#/..#.
###/.##/##. => .#../#.../.###/.#..
.##/###/##. => #.../..#./..#./.###
###/###/##. => .#../.#../####/###.
#.#/.../#.# => ##.#/##../...#/##.#
###/.../#.# => ###./###./#..#/###.
###/#../#.# => .###/..#./.#../#...
#.#/.#./#.# => ##.#/.##./.#.#/##.#
###/.#./#.# => ...#/...#/#.##/.##.
###/##./#.# => #.../##../#.../....
#.#/#.#/#.# => ####/.#../..##/..##
###/#.#/#.# => ##../####/#.##/..##
#.#/###/#.# => ##../..../..../####
###/###/#.# => .#../.#.#/.###/.#.#
###/#.#/### => ##../####/###./...#
###/###/### => ###./#..#/##../.##.
""".components(separatedBy: .newlines)

